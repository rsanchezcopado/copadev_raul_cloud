<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>51.0</apiVersion>
    <assignments>
        <description>Adds the retail store ID to RetailStoresWithVisitsRecommended and the case reason to VisitRecommendationReasons.</description>
        <name>AddCaseReasonToCollectionVariable</name>
        <label>Add Store and Reason Detail to Collection Variables</label>
        <locationX>1230</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>RecommendedSiteIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>GetPrimaryContact.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VisitRecommendationReasons</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>FormulaCaseReason</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetEligiblePromotionChannel</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the current retail store ID to RetailStoresWithVisitsRecommended and the promotion reason to VisitRecommendationReasons.</description>
        <name>AddPromotionReasonToCollectionVariable</name>
        <label>Add Store and Promotion Reason to Collection Variables</label>
        <locationX>684</locationX>
        <locationY>697</locationY>
        <assignmentItems>
            <assignToReference>RecommendedSiteIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverRetailStores</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VisitRecommendationReasons</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>FormulaPromotionChannelReason</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetVisitBeforeTargetDate</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Increments the LoopCounter variable.</description>
        <name>IncrementLoopCounter</name>
        <label>Increment Loop Counter</label>
        <locationX>455</locationX>
        <locationY>802</locationY>
        <assignmentItems>
            <assignToReference>LoopCounter</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>GetOosRetailVisitKpi</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Increments the OosVisitCounter variable.</description>
        <name>IncrementOosVisitCounter</name>
        <label>Increment OOS Visit Counter</label>
        <locationX>134</locationX>
        <locationY>656</locationY>
        <assignmentItems>
            <assignToReference>OosVisitCounter</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>CurrentVisitIteration</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the stores for which visits are recommended to the RecommendedRetailStore variable and the reason for visit recommendation to the RecommendationReasons variable.</description>
        <name>RecommendedVisits</name>
        <label>Recommended Visits</label>
        <locationX>402</locationX>
        <locationY>202</locationY>
        <assignmentItems>
            <assignToReference>RecommendedSiteIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>IterateOverRetailStores</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>VisitRecommendationReasons</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>FormulaOOSReason</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>IterateOverRetailStores</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Resets the LoopCounter variable to 0.</description>
        <name>ResetLoopCounter</name>
        <label>Reset Loop Counter</label>
        <locationX>58</locationX>
        <locationY>369</locationY>
        <assignmentItems>
            <assignToReference>LoopCounter</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>DoesVisitHaveRequiredOosVisitKpis</targetReference>
        </connector>
    </assignments>
    <decisions>
        <description>Determines whether the retail storeâ€™s primary contact has an open case.</description>
        <name>DoesOpenCaseExist</name>
        <label>Has Open Case?</label>
        <locationX>1596</locationX>
        <locationY>676</locationY>
        <defaultConnector>
            <targetReference>GetLastPlannedVisit</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>NoOpenCase</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetOpenCaseForPrimaryContact</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetEligiblePromotionChannel</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether a promotion channel is scheduled for the current retail store after (n) days.</description>
        <name>DoesPromotionChannelExist</name>
        <label>Does Promotion Channel Exist?</label>
        <locationX>898</locationX>
        <locationY>684</locationY>
        <defaultConnector>
            <targetReference>AddPromotionReasonToCollectionVariable</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>NoPromotionChannel</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetEligiblePromotionChannel</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetVisitBeforeTargetDate</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the current retail store has a primary contact.</description>
        <name>DoesRetailStoreHavePrimaryContact</name>
        <label>Has a Primary Contact?</label>
        <locationX>1274</locationX>
        <locationY>424</locationY>
        <defaultConnector>
            <targetReference>GetOpenCaseForPrimaryContact</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>NoPrimaryContact</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetPrimaryContact.PrimaryContactId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetEligiblePromotionChannel</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the visit has the required number of retail store visit KPIs.</description>
        <name>DoesVisitHaveRequiredOosVisitKpis</name>
        <label>Does Visit Have Required OOS Visit KPIs?</label>
        <locationX>50</locationX>
        <locationY>162</locationY>
        <defaultConnector>
            <targetReference>IterateOverRetailStores</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>HasRequiredOosVisitKpis</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>OosVisitCounter</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>NumberOfOutOfStockRetailStoreVisits</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>RecommendedVisits</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the out-of-stock visit count is greater than the defined limit for out-of-stock visits.</description>
        <name>IsOosCountMoreThanOosVisitLimit</name>
        <label>Is OOS Count More than OOS Visit Limit?</label>
        <locationX>446</locationX>
        <locationY>567</locationY>
        <defaultConnector>
            <targetReference>ResetLoopCounter</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>IsLessThanOrEqualToOosVisits</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>LoopCounter</leftValueReference>
                <operator>LessThanOrEqualTo</operator>
                <rightValue>
                    <elementReference>NumberOfRetailStoreVisits</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IncrementLoopCounter</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the current visit has a type of OutOfStock.</description>
        <name>IsVisitOosType</name>
        <label>Is OOS Visit?</label>
        <locationX>157</locationX>
        <locationY>872</locationY>
        <defaultConnector>
            <targetReference>CurrentVisitIteration</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>VisitIsTypeOos</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetOosRetailVisitKpi</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IncrementOosVisitCounter</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the current retail store has a visit scheduled after the latest case was created for the store&apos;s primary contact.</description>
        <name>IsVisitScheduled</name>
        <label>Is Visit Scheduled?</label>
        <locationX>1232</locationX>
        <locationY>842</locationY>
        <defaultConnector>
            <targetReference>GetEligiblePromotionChannel</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes (Default)</defaultConnectorLabel>
        <rules>
            <name>NoPlannedVisit</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetLastPlannedVisit</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>AddCaseReasonToCollectionVariable</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <decisions>
        <description>Determines whether the retail store was visited {x} days before the recommendation target date.</description>
        <name>WasRetailStoreVisitedBeforeRecommendationRequestDate</name>
        <label>Was Retail Store Visited?</label>
        <locationX>811</locationX>
        <locationY>413</locationY>
        <defaultConnector>
            <targetReference>GetVisits</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No (Default)</defaultConnectorLabel>
        <rules>
            <name>StoreWasVisited</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>GetVisitBeforeTargetDate</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>IterateOverRetailStores</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <formulas>
        <description>Indicates the case reason for recommending a visit to a retail store.</description>
        <name>FormulaCaseReason</name>
        <dataType>String</dataType>
        <expression>&quot;No visit created after the latest case logged against primary contact.&quot;</expression>
    </formulas>
    <formulas>
        <name>FormulaOOSReason</name>
        <dataType>String</dataType>
        <expression>&quot;Store is not visited in last &quot;+TEXT({!NumberofDaysSinceLastRetailStoreVisit})+ &quot; days and &quot;+TEXT({!OosVisitCounter}) +&quot; out of &quot;+TEXT({!NumberOfRetailStoreVisits})+&quot; visits have oos kpis.&quot;</expression>
    </formulas>
    <formulas>
        <description>Calculates the end date of promotion channels of retail stores.</description>
        <name>FormulaPromotionChannelEndDate</name>
        <dataType>Date</dataType>
        <expression>{!TargetDate}+365</expression>
    </formulas>
    <formulas>
        <description>Indicates the promotion channel reason for recommending a visit to a retail store. This is based on upcoming promotions.</description>
        <name>FormulaPromotionChannelReason</name>
        <dataType>String</dataType>
        <expression>&quot;Upcoming promotion for the store scheduled after &quot;+TEXT({!NumberofDaysForConsideringPromotions})+&quot; days.&quot;</expression>
    </formulas>
    <formulas>
        <description>Calculates the start date of promotion channels of retail stores.</description>
        <name>FormulaPromotionChannelStartDate</name>
        <dataType>Date</dataType>
        <expression>{!TargetDate}+{!NumberofDaysForConsideringPromotions}</expression>
    </formulas>
    <formulas>
        <description>Calculates the recommended date for visiting retail stores.</description>
        <name>FormulaRecommendedVisitDate</name>
        <dataType>Date</dataType>
        <expression>{!TargetDate}-{!NumberofDaysSinceLastRetailStoreVisit}</expression>
    </formulas>
    <interviewLabel>Visit Recommendation Sample Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Visit Recommendation Sample Flow</label>
    <loops>
        <description>Repeats actions in loop for each visit in LatestRetailStoreVisits to determine the number of out-of-stock visits made for a store.</description>
        <name>CurrentVisitIteration</name>
        <label>Iterate Over Visits</label>
        <locationX>395</locationX>
        <locationY>352</locationY>
        <collectionReference>GetVisits</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>IsOosCountMoreThanOosVisitLimit</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>ResetLoopCounter</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <description>Repeats actions in loop for each store in RetailStoresWithRecommendationRequests to identify and exclude out-of-stock retail store visits that exceed the number of visits being considered for recommendations.</description>
        <name>IterateOverRetailStores</name>
        <label>Iterate Over Retail Stores</label>
        <locationX>1010</locationX>
        <locationY>43</locationY>
        <collectionReference>SiteIds</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>GetPrimaryContact</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets an eligible promotion for the current retail store.</description>
        <name>GetEligiblePromotionChannel</name>
        <label>Get Eligible Promotion Channel</label>
        <locationX>1070</locationX>
        <locationY>683</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DoesPromotionChannelExist</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND (3 OR 4)</filterLogic>
        <filters>
            <field>StartDate</field>
            <operator>GreaterThan</operator>
            <value>
                <elementReference>FormulaPromotionChannelStartDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>RetailStoreId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverRetailStores</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>FormulaPromotionChannelEndDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>EndDate</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PromotionChannel</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>StartDate</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the latest planned visit for the store&apos;s current primary contact&apos;s open case.</description>
        <name>GetLastPlannedVisit</name>
        <label>Get Last Planned Visit</label>
        <locationX>1403</locationX>
        <locationY>763</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsVisitScheduled</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>PlannedVisitStartTime</field>
            <operator>GreaterThan</operator>
            <value>
                <elementReference>GetOpenCaseForPrimaryContact.CreatedDate</elementReference>
            </value>
        </filters>
        <filters>
            <field>PlaceId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverRetailStores</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Visit</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>PlannedVisitStartTime</queriedFields>
        <sortField>PlannedVisitStartTime</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the retail visit KPI for the current visit with a type of OutOfStock.</description>
        <name>GetOosRetailVisitKpi</name>
        <label>Get OOS Retail Visit KPI</label>
        <locationX>452</locationX>
        <locationY>952</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IsVisitOosType</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>OutOfStock</stringValue>
            </value>
        </filters>
        <filters>
            <field>VisitId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CurrentVisitIteration.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>ActualBooleanValue</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>True</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RetailVisitKpi</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the most recently opened case for the current retail store&apos;s primary contact.</description>
        <name>GetOpenCaseForPrimaryContact</name>
        <label>Get Open Case for Primary Contact</label>
        <locationX>1426</locationX>
        <locationY>556</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DoesOpenCaseExist</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ContactId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>GetPrimaryContact.PrimaryContactId</elementReference>
            </value>
        </filters>
        <filters>
            <field>IsClosed</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <filters>
            <field>ClosedDate</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>CreatedDate</queriedFields>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the primary contact for the current retail store.</description>
        <name>GetPrimaryContact</name>
        <label>Get Primary Contact</label>
        <locationX>1403</locationX>
        <locationY>214</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>DoesRetailStoreHavePrimaryContact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverRetailStores</elementReference>
            </value>
        </filters>
        <filters>
            <field>PrimaryContactId</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RetailStore</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>PrimaryContactId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets a visit planned for x days before the recommendation target date for the current retail store.</description>
        <name>GetVisitBeforeTargetDate</name>
        <label>Get Visit Before Target Date</label>
        <locationX>677</locationX>
        <locationY>534</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>WasRetailStoreVisitedBeforeRecommendationRequestDate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>PlaceId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverRetailStores</elementReference>
            </value>
        </filters>
        <filters>
            <field>ActualVisitStartTime</field>
            <operator>GreaterThanOrEqualTo</operator>
            <value>
                <elementReference>FormulaRecommendedVisitDate</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Visit</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>PlaceId</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets the visits for a retail store.</description>
        <name>GetVisits</name>
        <label>Get Visits</label>
        <locationX>551</locationX>
        <locationY>352</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>CurrentVisitIteration</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>PlaceId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>IterateOverRetailStores</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Visit</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>ActualVisitStartTime</queriedFields>
        <sortField>ActualVisitStartTime</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>206</locationX>
        <locationY>12</locationY>
        <connector>
            <targetReference>IterateOverRetailStores</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <description>Stores the current iteration of the visit that is being iterated for the IterateOverVisits loop.</description>
        <name>LoopCounter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the number of days to determine the eligible promotions. The retail stores having promotion channels after these many number of days are considered for visit recommendations.</description>
        <name>NumberofDaysForConsideringPromotions</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>7.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the number of days since the retail store was last visited.</description>
        <name>NumberofDaysSinceLastRetailStoreVisit</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>14.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the number of visits to be considered for recommendations when the retail store was out of stock.</description>
        <name>NumberOfOutOfStockRetailStoreVisits</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>1.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the number of visits to be considered for recommendations for retail stores.</description>
        <name>NumberOfRetailStoreVisits</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>4.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the number of visits in which the store was identified as out of stock.</description>
        <name>OosVisitCounter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
        <value>
            <numberValue>0.0</numberValue>
        </value>
    </variables>
    <variables>
        <description>Stores the retail store for which visits are recommended.</description>
        <name>RecommendedSiteIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <description>Stores the retail stores for which visit recommendations are requested.</description>
        <name>SiteIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <description>Stores the date when the visits can be recommended.</description>
        <name>TargetDate</name>
        <dataType>Date</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <value>
            <elementReference>$System.OriginDateTime</elementReference>
        </value>
    </variables>
    <variables>
        <description>Stores the reasons for visit recommendations.</description>
        <name>VisitRecommendationReasons</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
